#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER   0
#define SECONDARY_LAYER 1
#define TERTIARY_LAYER  2
#define SYSTEM_LAYER    3
#define MOUSE_R_LAYER   4
#define SCROLL_R_LAYER  5
#define MOUSE_L_LAYER   6
#define SCROLL_L_LAYER  7

// Mouse Scroll Value

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// cirque trackpad input&layer control

&glidepoint_listener_R {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 4 2>,
        <&zip_temp_layer MOUSE_R_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 2>,
            <&zip_temp_layer MOUSE_R_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_R_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 8>;
    };
};

&glidepoint_listener_L {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_L_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 4>,
            <&zip_temp_layer MOUSE_L_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_L_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    };
};

/ {
    behaviors {
        // Encoder to Mouse Scroll

        scroll_up_down: sensor_scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
            label = "SCROLL_UP_DOWN";
        };

        scroll_down_up: sensor_scroll_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
            label = "SCROLL_DOWN_UP";
        };

        scroll_left_right: sensor_scroll_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
            label = "SCROLL_LEFT_RIGHT";
        };

        scroll_right_left: sensor_scroll_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
            label = "SCROLL_RIGHT_LEFT";
        };

        volume_up_down: sensor_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
            label = "VOLUME_UP_DOWN";
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "DOT_COMMA";
        };

        pls_minus: pls_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "PLS_MINUS";
        };

        allow_pageup: allow_pageup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PAGE_UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEUP";
        };

        allow_pagedown: allow_pagedown {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEDOWN";
        };

        allow_home: allow_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_HOME";
        };

        allow_end: allow_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_END";
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "Default";
            sensor-bindings = <&scroll_down_up>, <&volume_up_down>;

            bindings = <
&kp ESC    &mt LEFT_ALT Q       &kp W            &kp E           &mt LEFT_ALT R       &kp T           &kp Y          &kp U             &kp I            &kp O       &kp P           &none
&kp TAB    &mt RIGHT_CONTROL A  &mt LEFT_GUI S   &kp D           &mt RIGHT_CONTROL F  &mt LEFT_GUI G  &kp H          &kp J             &kp K            &kp L       &mt2 SEMI LBKT  &none
&kp LSHFT  &mt LEFT_SHIFT Z     &kp X            &kp C           &mt LEFT_SHIFT V     &kp B           &kp N          &kp M             &kp COMMA        &kp PERIOD  &mt2 UP SLASH   &none
&kp LCTRL  &kp LEFT_WIN         &lt 2 TAB        &mo 6           &lt 1 SPACE          &none           &none          &kp INT_MUHENKAN  &kp INT_HENKAN   &none       &none           &kp ENTER
                                &kp RIGHT_ARROW  &kp DOWN_ARROW  &kp LEFT_ARROW       &kp UP_ARROW    &allow_pageup  &allow_home       &allow_pagedown  &allow_end
            >;
        };

        SECONDARY_LAYER {
            display-name = "secondary_layer";
            sensor-bindings = <&scroll_left_right>, <&scroll_left_right>;

            bindings = <
&trans  &mt LEFT_ALT GRAVE          &kp EQUAL              &kp MINUS     &mt LEFT_ALT LEFT_BRACKET   &kp RIGHT_BRACKET      &kp F1   &kp F2   &kp F3  &kp F4  &kp F5         &trans
&trans  &mt RIGHT_CONTROL NUMBER_1  &mt LEFT_GUI NUMBER_2  &kp NUMBER_3  &mt RIGHT_CONTROL NUMBER_4  &mt LEFT_GUI NUMBER_5  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10        &trans
&trans  &mt LEFT_SHIFT NUMBER_6     &kp NUMBER_7           &kp NUMBER_8  &mt LEFT_SHIFT NUMBER_9     &kp NUMBER_0           &kp F11  &kp F12  &trans  &trans  &kp BACKSLASH  &trans
&trans  &trans                      &trans                 &trans        &trans                      &trans                 &trans   &trans   &trans  &trans  &trans         &trans
                                    &trans                 &trans        &trans                      &trans                 &trans   &trans   &trans  &trans
            >;
        };

        TERTIARY_LAYER {
            display-name = "tertiary_layer";
            bindings = <
&trans  &mt LEFT_ALT HOME             &kp UP_ARROW         &kp END    &mt LEFT_ALT PAUSE_BREAK       &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mt RIGHT_CONTROL LEFT_ARROW  &mt LGUI DOWN_ARROW  &kp RIGHT  &mt RIGHT_CONTROL PAUSE_BREAK  &mt LEFT_GUI PAUSE_BREAK  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mt LEFT_SHIFT PAUSE_BREAK    &trans               &trans     &mt LEFT_SHIFT PAUSE_BREAK     &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                        &trans               &trans     &trans                         &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans               &trans     &trans                         &trans                    &trans  &trans  &trans  &trans
            >;
        };

        SYSTEM_LAYER {
            display-name = "system_layer";
            sensor-bindings = <&scroll_down_up>, <&volume_up_down>;

            bindings = <
&trans  &trans  &trans  &trans  &trans       &trans      &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &trans  &trans  &trans  &bootloader  &sys_reset  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans
&trans  &trans  &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans        &trans          &trans
                &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans
            >;
        };

        MOUSE_R_LAYER {
            display-name = "mouse_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mo 5
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4   &mkp MB5   &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans
            >;
        };

        SCROLL_R_LAYER {
            display-name = "scroll_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE_L_LAYER {
            display-name = "mouse_l_layer";
            bindings = <
&trans  &mt LEFT_ALT SQT         &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_RIGHT  &mkp MB5   &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &trans  &trans
&mo 7   &mt RIGHT_CONTROL MINUS  &mt LGUI ENTER  &msc SCRL_DOWN  &mkp LCLK        &mkp MCLK  &kp LEFT  &kp DOWN     &kp UP_ARROW   &kp RIGHT  &trans  &trans
&trans  &mt LEFT_SHIFT GRAVE     &kp BACKSPACE   &kp DEL         &mkp RCLK        &mkp MB4   &kp F16   &kp F17      &kp F18        &kp F19    &trans  &trans
&trans  &trans                   &trans          &trans          &trans           &trans     &trans    &trans       &trans         &trans     &trans  &trans
                                 &trans          &trans          &trans           &trans     &trans    &trans       &trans         &trans
            >;
        };

        SCROLL_L_LAYER {
            display-name = "scroll_l_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
